load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@rules_pkg//:mappings.bzl", "pkg_files", "strip_prefix")
load("@rules_pkg//pkg:pkg.bzl", "pkg_zip", "pkg_tar")

go_library(
    name = "project_template",
    srcs = ["projects.go"],
    embedsrcs = [
        "template/abbreviations.csv",
        "template/bib_entries.csv",
        "template/citedKeys.csv",
        "template/data/bib_categories.json",
        "template/data/bib_entries.json",
        "template/styPackages/abbreviations.sty",
        "template/styPackages/appendix.sty",
        "template/styPackages/bibliography.sty",
        "template/styPackages/codes.sty",
        "template/styPackages/footer.sty",
        "template/styPackages/header_footer.sty",
        "template/styPackages/html.sty",
        "template/styPackages/table_of_contents.sty",
        "template/styPackages/headings.sty",
        "template/main.tex",
    ],
    importpath = "github.com/TimoSto/ThesorTeX/pkg/backend/project_template",
    visibility = ["//visibility:public"],
)

pkg_files(
    name = "srcs",
    srcs = glob(["template/**/*"]),
    strip_prefix = strip_prefix.from_pkg("template"),
    visibility = ["//services:__subpackages__"],
)

pkg_zip(
    name = "template_zip",
    srcs = [
        ":srcs",
    ],
    visibility = ["//tools:__subpackages__"],
)

genrule(
    name = "documentation_de",
    srcs = [
        "documentation_de.md"
    ],
    outs = ["docs/de"],
    cmd = "mkdir $(OUTS) && $(location //tools/documentationbuilder:documentationbuilder) -out-dir=$(location docs/de) -src=$(location documentation_de.md)",
    tools = ["//tools/documentationbuilder:documentationbuilder"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "documentation_en",
    srcs = [
        "documentation_en.md"
    ],
    outs = ["docs/en"],
    cmd = "mkdir $(OUTS) && $(location //tools/documentationbuilder:documentationbuilder) -out-dir=$(location docs/en) -src=$(location documentation_en.md)",
    tools = ["//tools/documentationbuilder:documentationbuilder"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "documentation_tar",
    srcs = [":documentation_de", ":documentation_en"],
    extension = "tar.gz",
    strip_prefix = strip_prefix.from_pkg("docs"),
    visibility = ["//visibility:public"],
)
