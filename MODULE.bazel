module(
    name = "thesortex",
)

# buildifier
# bazel_dep(name = "buildtools", version = "5.1.0")

# go dependencies
bazel_dep(name = "rules_go", version = "0.47.1", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.35.0", repo_name = "bazel_gazelle") # TODO gazelle version warning

# go version
go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.21.5")

# nogo TODO: enable!!!!
# go_sdk.nogo(nogo = "//:my_nogo")

# rules_pkg
bazel_dep(name = "rules_pkg", version = "0.10.1")

# node js setup

bazel_dep(name = "aspect_rules_js", version = "1.42.3")

bazel_dep(name = "rules_nodejs", version = "6.2.0")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "18.17.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    npmrc = "//:.npmrc",
    verify_node_modules_ignored = "//:.bazelignore",
)

use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")

# oci for docker

bazel_dep(name = "rules_oci", version = "1.7.6")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Declare external images you need to pull, for example:
oci.pull(
    name = "lambda_base",
    digest = "sha256:75cea0342b7c1343dc75fa5e028b6d88b669a541e04c3302e650cea9e8e02cfa",
    image = "public.ecr.aws/lambda/provided",
    platforms = ["linux/amd64"],
)

use_repo(oci, "lambda_base")