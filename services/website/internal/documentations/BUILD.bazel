load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@rules_pkg//:mappings.bzl", "pkg_filegroup", "pkg_files", "strip_prefix")
load("@rules_pkg//pkg:pkg.bzl", "pkg_tar", "pkg_zip")

genrule(
    name = "template_zip",
    srcs = [
        ":docsImagesDir",
    ],
    outs = ["test.zip"],
    cmd = "zip -r $(OUTS) $(location :docsImagesDir)",
)

go_library(
    name = "documentations",
    srcs = ["documentations.go"],
    embedsrcs = [
        "docs/thesisTemplate",  # keep
        "docs/thesisTool",  # keep
        "docs/cvTemplate",  # keep
        "documentation_de.pdf",
        "documentation_de.zip",
        "documentation_en.pdf",
        "documentation_en.zip",
        "docsImages",
    ],
    importpath = "github.com/TimoSto/ThesorTeX/services/website/internal/documentations",
    visibility = ["//services/website:__subpackages__"],
)

genrule(
    name = "docsImagesDir",
    srcs = [
        "//pkg/tex/cv_template:documentation_images",
        "//services/thesisTool/documentation:documentation_images",
    ],
    outs = ["docsImages"],
    cmd = "mkdir $(OUTS) && mkdir $(OUTS)/cv_images && tar -C $(OUTS)/cv_images -zxf $(location //pkg/tex/cv_template:documentation_images) && mkdir $(OUTS)/thesisTool_images && tar -C $(OUTS)/thesisTool_images -zxf $(location //services/thesisTool/documentation:documentation_images)",
)

genrule(
    name = "copyDocsJSON",
    srcs = ["//pkg/tex/project_template:documentation_tar"],
    outs = ["docs/thesisTemplate"],
    cmd = "mkdir -p $(OUTS) && tar -C $(OUTS) -zxf $(SRCS)",
)

genrule(
    name = "copyDocsJSONCV",
    srcs = ["//pkg/tex/cv_template:documentation_tar"],
    outs = ["docs/cvTemplate"],
    cmd = "mkdir -p $(OUTS) && tar -C $(OUTS) -zxf $(SRCS)",
)

genrule(
    name = "copyDocsJSONThesisTool",
    srcs = ["//services/thesisTool/documentation:documentation_tar"],
    outs = ["docs/thesisTool"],
    cmd = "mkdir -p $(OUTS) && tar -C $(OUTS) -zxf $(SRCS)",
)

go_test(
    name = "documentations_test",
    srcs = ["documentations_test.go"],
    embed = [":documentations"],
    deps = ["//vendor/github.com/google/go-cmp/cmp"],
)

genrule(
    name = "docs_de_tex",
    srcs = [
        "//pkg/tex/project_template:documentation_de",
        "//pkg/tex/cv_template:documentation_de",
        "//pkg/tex/cv_template:documentation_images",
        "//services/thesisTool/documentation:documentation_de",
        "//services/thesisTool/documentation:documentation_images",
        "//services/website/internal/documentations/titlepages:titlepage_de.pdf",
    ],
    outs = ["docs_de"],
    cmd = "mkdir $(OUTS) && \
        mkdir $(OUTS)/cv_images && \
        tar -C $(OUTS)/cv_images -zxf $(location //pkg/tex/cv_template:documentation_images) && \
        mkdir $(OUTS)/thesisTool_images && \
        tar -C $(OUTS)/thesisTool_images -zxf $(location //services/thesisTool/documentation:documentation_images) && \
        $(location //tools/documentationcombinator:documentationcombinator) \
            -out-dir=$(location docs_de) \
            -docs=$(location //pkg/tex/project_template:documentation_de),$(location //services/thesisTool/documentation:documentation_de),$(location //pkg/tex/cv_template:documentation_de) \
            -title-page=titlepages/titlepage_de.pdf \
            -title=ThesorTeX\\\\\\\\Dokumentation \
            -author='ThesorTeX' \
            -lang=DE && \
        mkdir $(location docs_de)/titlepages && \
        cp $(location //services/website/internal/documentations/titlepages:titlepage_de.pdf) $(location docs_de)/titlepages/titlepage_de.pdf",
    tools = ["//tools/documentationcombinator"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "docs_de_pdf",
    srcs = [":docs_de_tex"],
    outs = ["documentation_de.pdf"],
    cmd = "$(location //tools/documentationcombinator/pdflatex:pdflatex.sh) main.tex $(locations :docs_de_tex) ../ documentation_de.pdf",
    tools = ["//tools/documentationcombinator/pdflatex:pdflatex.sh"],
)

# pkg_zip seems to have problems with srcs generated by genrule
genrule(
    name = "docs_de_zip",
    srcs = [
        ":docs_de_tex",
        ":docs_de_pdf",
    ],
    outs = ["documentation_de.zip"],
    cmd = "cp -r $(location :docs_de_tex) ./documentation_de && \
        cp $(location :docs_de_pdf) ./documentation_de/main.pdf && \
        rm -f {**/*.aux,**/*.lot,**/*.lof,**/*.mcf,**/*.toc,**/*.log} && \
        zip -r $(OUTS) ./documentation_de",
)

genrule(
    name = "docs_en_tex",
    srcs = [
        "//pkg/tex/project_template:documentation_en",
        "//pkg/tex/cv_template:documentation_en",
        "//pkg/tex/cv_template:documentation_images",
        "//services/thesisTool/documentation:documentation_en",
        "//services/thesisTool/documentation:documentation_images",
        "//services/website/internal/documentations/titlepages:titlepage_en.pdf",
    ],
    outs = ["docs_en"],
    cmd = "mkdir $(OUTS) && \
            mkdir $(OUTS)/cv_images && \
            tar -C $(OUTS)/cv_images -zxf $(location //pkg/tex/cv_template:documentation_images) && \
            mkdir $(OUTS)/thesisTool_images && \
            tar -C $(OUTS)/thesisTool_images -zxf $(location //services/thesisTool/documentation:documentation_images) && \
            $(location //tools/documentationcombinator:documentationcombinator) \
                -out-dir=$(location docs_en) \
                -docs=$(location //pkg/tex/project_template:documentation_en),$(location //services/thesisTool/documentation:documentation_en),$(location //pkg/tex/cv_template:documentation_en) \
                -title-page=titlepages/titlepage_en.pdf \
                -title=ThesorTeX\\\\\\\\Documentation \
                -author='ThesorTeX' \
                -lang=EN && \
            mkdir $(location docs_en)/titlepages && \
            cp $(location //services/website/internal/documentations/titlepages:titlepage_en.pdf) $(location docs_en)/titlepages/titlepage_en.pdf",
    tools = ["//tools/documentationcombinator"],
    visibility = ["//visibility:public"],
)

# pkg_zip seems to have problems with srcs generated by genrule
genrule(
    name = "docs_en_zip",
    srcs = [
        ":docs_en_tex",
        ":docs_en_pdf",
    ],
    outs = ["documentation_en.zip"],
    cmd = "cp -r $(location :docs_en_tex) ./documentation_en && \
            cp $(location :docs_en_pdf) ./documentation_en/main.pdf && \
            rm -f {**/*.aux,**/*.lot,**/*.lof,**/*.mcf,**/*.toc,**/*.log} && \
            zip -r $(OUTS) ./documentation_en",
)

genrule(
    name = "docs_en_pdf",
    srcs = [":docs_en_tex"],
    outs = ["documentation_en.pdf"],
    cmd = "$(location //tools/documentationcombinator/pdflatex:pdflatex.sh) main.tex $(locations :docs_en_tex) ../ documentation_en.pdf",
    tools = ["//tools/documentationcombinator/pdflatex:pdflatex.sh"],
)
