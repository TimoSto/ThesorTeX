load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "documentations",
    srcs = ["documentations.go"],
    embedsrcs = [
        ":copyDocsJSON",
        ":copyDocsJSONCV",
        ":docs_de_pdf",
        ":docs_en_pdf",
        ":docsImages"
    ],
    importpath = "github.com/TimoSto/ThesorTeX/services/website/internal/documentations",
    visibility = ["//services/website:__subpackages__"],
)

genrule(
    name = "docsImages",
    srcs = ["//pkg/backend/cv_template:documentation_images"],
    outs = ["docsImages"],
    cmd = "mkdir $(OUTS) && mkdir $(OUTS)/cv_images && tar -C $(OUTS)/cv_images -zxf $(location //pkg/backend/cv_template:documentation_images)"
)

genrule(
    name = "copyDocsJSON",
    srcs = ["//pkg/backend/project_template:documentation_tar"],
    outs = ["docs/thesisTemplate"],
    cmd = "mkdir -p $(OUTS) && tar -C $(OUTS) -zxf $(SRCS)",
)

genrule(
    name = "copyDocsJSONCV",
    srcs = ["//pkg/backend/cv_template:documentation_tar"],
    outs = ["docs/cvTemplate"],
    cmd = "mkdir -p $(OUTS) && tar -C $(OUTS) -zxf $(SRCS)",
)

go_test(
    name = "documentations_test",
    srcs = ["documentations_test.go"],
    embed = [":documentations"],
    deps = ["//vendor/github.com/google/go-cmp/cmp"],
)

genrule(
    name = "docs_de_tex",
    srcs = ["//pkg/backend/project_template:documentation_de", "//pkg/backend/cv_template:documentation_de", "//pkg/backend/cv_template:documentation_images"],
    outs = ["docs_de"],
    cmd = "mkdir $(OUTS) && mkdir $(OUTS)/cv_images && tar -C $(OUTS)/cv_images -zxf $(location //pkg/backend/cv_template:documentation_images) && $(location //tools/documentationcombinator:documentationcombinator) -out-dir=$(location docs_de) -docs=$(location //pkg/backend/project_template:documentation_de),$(location //pkg/backend/cv_template:documentation_de)",
    tools = ["//tools/documentationcombinator:documentationcombinator"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "docs_de_pdf",
    srcs = [":docs_de_tex"],
    outs = ["documentation_de.pdf"],
    cmd = "$(location //tools/documentationcombinator/pdflatex:pdflatex.sh) main.tex $(locations :docs_de_tex) ../ documentation_de.pdf",
    tools = ["//tools/documentationcombinator/pdflatex:pdflatex.sh"],
)

genrule(
    name = "docs_en_tex",
    srcs = ["//pkg/backend/project_template:documentation_en","//pkg/backend/cv_template:documentation_en"],
    outs = ["docs_en"],
    cmd = "mkdir $(OUTS) && $(location //tools/documentationcombinator:documentationcombinator) -out-dir=$(location docs_en) -docs=$(location //pkg/backend/project_template:documentation_en),$(location //pkg/backend/cv_template:documentation_en)",
    tools = ["//tools/documentationcombinator:documentationcombinator"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "docs_en_pdf",
    srcs = [":docs_en_tex"],
    outs = ["documentation_en.pdf"],
    cmd = "$(location //tools/documentationcombinator/pdflatex:pdflatex.sh) main.tex $(locations :docs_en_tex) ../ documentation_en.pdf",
    tools = ["//tools/documentationcombinator/pdflatex:pdflatex.sh"],
)
